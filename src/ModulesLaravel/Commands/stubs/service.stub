<?php

namespace App\Modules\*MODULENAME*\Services;

use App\Core\Services\BaseService;
use App\Modules\*MODULENAME*\Contracts\Services\*NAME*ServiceContract;
use App\Modules\*MODULENAME*\Contracts\Repositories\*NAME*RepositoryContract;

class *NAME*Service extends BaseService implements *NAME*ServiceContract
{
    protected $repository;

    /**
     * *NAME*Service constructor.
     * @param *NAME*RepositoryContract $repository
     */
    public function __construct(*NAME*RepositoryContract $repository)
    {
        $this->repository = $repository;
    }

    /**
     * @return mixed
     */
    public function all()
    {
        return $this->repository->all();
    }

    /**
     * @param $id
     * @return mixed
     */
    public function show($id)
    {
        return $this->repository->find($id);
    }

    /**
     * @param $data
     * @return mixed
     */
    public function store($data)
    {
        // TODO: Implements the fields of store() method. If necessary

        return $this->repository->save($data);
    }

    /**
     * @param $data
     * @param $id
     * @return mixed
     */
    public function update($data, $id)
    {
        // TODO: Implements the fields of update() method. If necessary

        return $this->repository->update($data, $id);
    }

    /**
     * @param $id
     * @return mixed
     */
    public function destroy($id)
    {
        return $this->repository->delete($id);
    }
}